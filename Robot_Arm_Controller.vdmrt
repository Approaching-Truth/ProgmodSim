class Robot_Arm_Controller
    instance variables
        public target: real;
        public ctl_joint_angle: real;
        public ctl_angular_velocity: real;
        public acceptance_range: real;

    operations
        -- Constructor
        public Robot_Arm_Controller: () ==> Robot_Arm_Controller
        Robot_Arm_Controller() == (
            target := 0;
            ctl_joint_angle := 0;
            ctl_angular_velocity := 0;
            acceptance_range := 0.1
        );
        public set_target: (real) ==> ()
        set_target(angle) == duration (0) (
            target := angle;
        );
        
        public set_velocity: (real) ==> ()
        set_velocity(velocity) == duration (0) (
            ctl_angular_velocity := velocity;
            MySystem`arm.env_angular_velocity := velocity;
        );

        public update_velocity: () ==> ()
        update_velocity() == duration (0) (
            dcl angle_error : real;
            dcl new_velocity : real;
            
            -- Calculate errror
            angle_error := target - ctl_joint_angle;
            
            -- In accepted range
            if ((angle_error > acceptance_range/2) and (angle_error < -acceptance_range/2)) then (
                new_velocity := 0;
            ) 
            -- Not in accepted range
            else (
                new_velocity := angle_error * 0.2;
            );
            
            ctl_angular_velocity := new_velocity;
        );

        public monitor_joint_angle: () ==> ()
        monitor_joint_angle() == duration(0) (
            dcl env_angle: real := MySystem`arm.env_joint_angle;
            ctl_joint_angle := env_angle;
        );


end Robot_Arm_Controller